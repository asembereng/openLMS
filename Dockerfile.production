# Production Dockerfile for openLMS
# Single container with Django + SQLite + Nginx

FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=laundry_management.settings

# Install system dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    supervisor \
    sqlite3 \
    gettext \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd --create-home --shell /bin/bash app

# Set work directory
WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt
RUN pip install gunicorn

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/staticfiles /app/media
RUN chown -R app:app /app

# Remove existing nginx default config
RUN rm -f /etc/nginx/sites-enabled/default

# Copy nginx configuration
COPY docker/nginx.conf /etc/nginx/sites-available/default
RUN ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

# Copy supervisor configuration
COPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Switch to app user for Django operations
USER app

# Collect static files
RUN python manage.py collectstatic --noinput

# Switch back to root for supervisor
USER root

# Create startup script that handles database setup at runtime
RUN echo '#!/bin/bash\n\
set -e\n\
echo "Starting openLMS Production Container..."\n\
echo "Setting up data directory..."\n\
mkdir -p /app/data/logs\n\
chown -R app:app /app/data\n\
echo "Running database migrations..."\n\
su app -c "python /app/manage.py migrate --noinput"\n\
echo "Ensuring superuser exists..."\n\
su app -c "python /app/manage.py ensure_superuser"\n\
echo "Initializing system settings..."\n\
su app -c "python /app/manage.py init_system_settings" || true\n\
echo "Starting services..."\n\
exec /usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf' > /start.sh

RUN chmod +x /start.sh

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/health/ || exit 1

# Start services
CMD ["/start.sh"]
